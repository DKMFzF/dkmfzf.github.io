"use strict";(globalThis.webpackChunkdkmfzf_frontend_portfolio=globalThis.webpackChunkdkmfzf_frontend_portfolio||[]).push([[630],{32630:(e,n,r)=>{r.r(n),r.d(n,{default:()=>s});var t=r(74848),o=r(96540),i=r(24922),u=r(39437);const s=()=>{const e=(0,o.useRef)(null);return(0,o.useEffect)((()=>{const n=new i.Z58,r=new i.qUd(-1,1,1,-1,0,1),t=new u.WebGLRenderer({antialias:!0});e.current&&(t.setSize(e.current.clientWidth,e.current.clientHeight),e.current.appendChild(t.domElement));const o={u_time:{value:0},u_resolution:{value:new i.I9Y(e.current?.clientWidth||window.innerWidth,e.current?.clientHeight||window.innerHeight)},u_mouse:{value:new i.I9Y(0,0)}},s=new i.BKk({uniforms:o,vertexShader:"varying vec2 vUv;\r\nvarying vec3 vNormal;\r\nvarying vec3 vPosition;\r\nvarying vec3 vWorldPosition;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  vNormal = normal;\r\n  vPosition = position;\r\n  vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n",fragmentShader:"precision highp float;\r\nuniform float u_time;\r\nuniform float u_pulse;\r\nuniform vec2 u_mouse;\r\nuniform vec2 u_resolution;\r\nuniform vec3 u_spherePosition;\r\n\r\nvarying vec2 vUv;\r\nvarying vec3 vNormal;\r\nvarying vec3 vPosition;\r\nvarying vec3 vWorldPosition;\r\n\r\n// Шумовые функции\r\nfloat noise(vec2 p) {\r\n  return fract(sin(dot(p, vec2(127.1, 311.7))) * 43758.5453);\r\n}\r\n\r\nfloat fbm(vec2 p) {\r\n  float value = 0.0;\r\n  float amplitude = 0.5;\r\n  for (int i = 0; i < 5; i++) {\r\n    value += amplitude * noise(p);\r\n    p *= 2.0;\r\n    amplitude *= 0.5;\r\n  }\r\n  return value;\r\n}\r\n\r\n// Основная функция рендеринга\r\nvoid main() {\r\n  vec2 uv = vUv - 0.5;\r\n  uv.x *= u_resolution.x / u_resolution.y;\r\n  \r\n  // Эффект глубины\r\n  float depth = dot(normalize(vNormal), vec3(0,0,1));\r\n  \r\n  // Динамические искажения\r\n  float pulseFactor = 0.1 * u_pulse;\r\n  uv += 0.1 * sin(u_time + uv.yx * 5.0) * (1.0 + pulseFactor);\r\n  \r\n  // Ядро энергии\r\n  float radius = length(uv);\r\n  float angle = atan(uv.y, uv.x);\r\n  float n = fbm(uv * 3.0 + u_time * 0.5);\r\n  \r\n  float core = smoothstep(0.3 + pulseFactor*0.1, 0.0, radius - n*0.1);\r\n  float glow = exp(-radius * (4.0 + pulseFactor*2.0));\r\n  \r\n  // Цветовые градиенты\r\n  vec3 colorGradient = mix(\r\n    vec3(1.0, 0.2, 0.0),\r\n    vec3(0.0, 0.5, 1.0),\r\n    vUv.y + 0.2*sin(u_time*0.5)\r\n  );\r\n  \r\n  // Световые лучи\r\n  float rays = sin(angle*10.0 + u_time*2.0) * 0.1;\r\n  float rayEffect = smoothstep(0.2, 0.0, abs(rays - radius)) * (0.8 + 0.2*depth);\r\n  \r\n  // Эффект от мыши - основная сторона\r\n  vec2 mouseUV = vec2(u_mouse.x, 1.0 - u_mouse.y);\r\n  float mouseDist = distance(vUv, mouseUV);\r\n  float mouseEffect = smoothstep(0.3, 0.0, mouseDist) * 0.5;\r\n  \r\n  // Эффект от мыши - противоположная сторона\r\n  vec2 oppositeMouseUV = vec2(1.0 - u_mouse.x, u_mouse.y);\r\n  float oppositeDist = distance(vUv, oppositeMouseUV);\r\n  float oppositeEffect = smoothstep(0.4, 0.0, oppositeDist) * 0.3;\r\n  \r\n  // Собираем все эффекты\r\n  vec3 color = vec3(0.0);\r\n  color += core * colorGradient * (1.0 + pulseFactor);\r\n  color += glow * vec3(1.0, 0.5, 0.8);\r\n  color += rayEffect * vec3(1.0, 0.8, 0.5);\r\n  color += mouseEffect * vec3(1.0, 0.8, 0.2);\r\n  color += oppositeEffect * vec3(0.8, 0.9, 1.0);\r\n  \r\n  gl_FragColor = vec4(color, 1.0);\r\n}\r\n"}),l=new i.eaF(new i.bdM(2,2),s);let c;n.add(l);const a=()=>{o.u_time.value+=.01,t.render(n,r),c=requestAnimationFrame(a)};a();const v=()=>{e.current&&(o.u_resolution.value.set(e.current.clientWidth,e.current.clientHeight),t.setSize(e.current.clientWidth,e.current.clientHeight))},m=n=>{if(e.current){const r=e.current.getBoundingClientRect();o.u_mouse.value.set(n.clientX-r.left,e.current.clientHeight-(n.clientY-r.top))}};return window.addEventListener("resize",v),e.current?.addEventListener("mousemove",m),()=>{cancelAnimationFrame(c),window.removeEventListener("resize",v),e.current?.removeEventListener("mousemove",m),e.current&&e.current.contains(t.domElement)&&e.current.removeChild(t.domElement)}}),[]),(0,t.jsx)("div",{ref:e,style:{width:"100%",height:"100%",position:"absolute",top:0,left:0,zIndex:0}})}}}]);